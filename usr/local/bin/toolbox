#!/usr/bin/env python3
import sys
import os
import importlib
import argparse

# Ajoute le chemin du répertoire contenant 'modules' au sys.path
sys.path.append(os.path.join(os.path.dirname(__file__), 'modules'))

def main():
    parser = argparse.ArgumentParser(description="Outil CLI pour exécuter des modules de manière modulaire.")
    parser.add_argument("module", help="Nom du module à exécuter.")
    parser.add_argument("args", nargs="*", help="Arguments positionnels pour le module.")
    
    # Options globales pour tous les modules
    parser.add_argument("-f", "--file", help="Nom du fichier de sortie pour certains modules.")
    parser.add_argument("-p", "--path", help="Chemin du dossier de sortie pour certains modules.")

    args = parser.parse_args()
    module_name = args.module
    module_args = args.args
    options = {"file": args.file, "path": args.path}

    try:
        # Tenter de charger le module
        module = importlib.import_module(module_name)

        # Vérifier si la fonction 'run' existe dans le module
        if hasattr(module, 'run'):
            run_func = module.run
            
            # Exécuter la fonction avec les arguments et options
            result = run_func(*module_args, **options)
            if result is not None:
                print(result)
        else:
            print(f"Le module '{module_name}' ne contient pas de fonction 'run'.")
            if module.__doc__:
                print(f"Aide pour le module '{module_name}' : {module.__doc__}")
    except ImportError as e:
        print(f"Erreur d'importation : {e}")
        print(f"Module '{module_name}' introuvable.")
    except Exception as e:
        print(f"Erreur lors de l'exécution du module '{module_name}': {e}")

if __name__ == "__main__":
    main()
